

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

:- ['tr_utils.P'].
%:- ['tr_operators.P'].
%:- ['tr_logger.P'].
%:- ['tr_debugger.P'].
:- ['tr_interpreter.P'].
:- ['tr_tabling_ops.P'].
%:- ['update_ops_no_length_with_trie_db.P'].
:- ['update_ops_no_length.P'].
%:- ['update_ops_with_hash_optimized.P'].
%:- ['update_ops_original.P'].
%:- ['tr_flags.P'].

% debuging information during execution
:- dynamic(tr_debug/1). % on or off

% profiling during execution
:- dynamic(tr_profile/1). % on or off

:- import profile_call/1 from xsb_profiling.

:- import length/2,
        member/2 from basics.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

memory_statistics(OH,M0,TS0,LS0,InternedTriesSpace0):-
        statistics(tablespace,[_,TS1]),% Table Space
        statistics(gl,[_,LS1]),% heap and Local environment Space
        statistics(trie\_assert,[_,InternedTriesSpace1]),% Interned Tries Space
        statistics(total_memory,[_,M1]),% Memory in use
        % the memory used by atoms in not used in tabling
        %statistics(atoms,A),
        DM is M1 - M0,
        ( DM>0 -> M is DM//1000; M=0 ),
        DTS is TS1 - TS0,
        ( DTS>0 -> TS is DTS//1000; TS=0 ),
        DLS is LS1 - LS0,
        ( DLS>0 -> LS is DLS//1000; LS=0 ),
        DInternedTriesSpace is InternedTriesSpace1 - InternedTriesSpace0,
        ( DInternedTriesSpace>0
                -> InternedTriesSpace is DInternedTriesSpace//1000
                ; InternedTriesSpace=0 ),
        !,
        write('Total memory used by the test: \t'),
        StatMem is InternedTriesSpace + TS + LS,
        write(StatMem),
        StatMem=StatMem, % for no warnings
        %write(M),
        M=M, % for no warnings
        nl,
        write('Memory used by the tabling: \t'),
        write(TS),
        nl,
        %write('Memory used by the environment: \t'),
        %write(LS),
        %nl,
        LS=LS, % not to generate warnings by commenting the lines above
        write('Interned tries space: \t\t'),
        write(InternedTriesSpace),
        nl,
        %M is TS + LS + InternedTriesSpace,% Memory in use
        write(OH,StatMem),
        %write(OH,M),
        write(OH,'\t'),
        write(OH,TS),
        write(OH,'\t'),
        write(OH,InternedTriesSpace),
        write(OH,'\t'),
        write(OH,LS),
        write(OH,'\t').
memory_statistics(OH,_M0):-
        write(OH,'\t').

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
:- dynamic(tr_output/2).
% outputs the results of the execution in a file tr.results,
%   outputing the version number (first argument),
%   second argument is a flag: write or append
output_handler(OH):-
        tr_output(_Version,Mode),
        open('tr.results',Mode,OH).

write_table_header(OH,Version):-
        tr_output(Version,write),
        write(OH,'\tResults\tCputime\tMemory\n'),
        !.
write_table_header(_OH,Version):-
        tr_output(Version,append),
        !.
write_table_header(_OH,_Version):-
        !.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%find_one(CTRfile) % for XSB batched execution
find_one(CTRfile):-
        % output in file
        output_handler(OH),
        !,
        find_one_internal(CTRfile,OH).
find_one(CTRfile):-
        % output on screen
        find_one_internal(CTRfile,user_out).

find_one_internal(CTRfile,OH):- % output on screen
        initializeCTRSystem(CTRfile,State0),% defined in v?/update_ops.P
        write('_Test file: '),
        write(CTRfile),
        write('\n'),
        test_description(Desc),
        write('_Description: '),
        write(Desc),
        write('\n'),
        test_query(Query),
        write('_Query: '),
        write(Query),
        write('\n'),
        my_cputime(T0),
        % test
        statistics(total_memory,[_,M0]),
        statistics(tablespace,[_,TS0]),% Table Space
        statistics(gl,[_,LS0]),% heap and Local environment Space
        statistics(trie\_assert,[_,InternedTriesSpace0]),% Interned Tries Space
        profile_or_not_for_findone(Query,State0,Result),
        my_cputime(T1),
        write(Result),
        write('\n'),
        DT is T1 - T0,
        write_table_header(OH,Version),
        %write(OH,'Version '),
        write(OH,Version),
        write(OH,':\t'),
        %write(OH,'_Cputime: '),
        write(OH,DT),
        write(OH,'\t'),
	nl,
        memory_statistics(OH,M0,TS0,LS0,InternedTriesSpace0),
        write(OH,'\t'),
        %write(OH,'_Number of results (batched; it should be 1 (partial)): '),
        length(Result,ResultLength),
        write(OH,ResultLength),
        write(OH,'\n'),
        write('Number of results: '),
        write(ResultLength),
        nl.

profile_or_not_for_findone(Query,State0,Result):-
        tr_profile(on),
        !,
        profile_call(findone_ctr_intern(Query,State0,Result)).
profile_or_not_for_findone(Query,State0,Result):-
        findone_ctr_intern(Query,State0,Result),
        !.

findone_ctr_intern(Query,State0,Result):-
        % ctr_query is defined in tr_interpreter.P
        ctr_planning_query(Query,State0,_State1),
        Result = [Query].

my_cputime(T):- % XSB
        cputime(T),
        !.
%my_cputime(T):- % Yap
%   T is cputime,
%   !.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
